enum AuctionEventType {
	Messaged
	Claimed
	SelectedRune
	Bid
	State
}

type AuctionEvent @entity(immutable: true) {
	"id will be auction-lot_index"
	id: ID!
	type: AuctionEventType!
	auction: Auction!
	user: Bytes
	index: Int!
	message: String!
	alias: String
	bid: BigInt
	bidCount: BigInt
	prevRune: Int
	rune: Int
	timestamp: BigInt
}

type AuctionParticipant @entity {
	"id will be auction-lot_user-address"
	id: ID!
	user: Bytes!
	auction: Auction!
	rune: Int!
	lastBidTimestamp: BigInt!
	hasBid: Boolean!
	alias: String!
	muted: Boolean!
}

type Auction @entity {
	"id will be lot"
	id: ID!
	lot: BigInt!
	eventIndex: Int!
	participants: [AuctionParticipant!]! @derivedFrom(field: "auction")
	events: [AuctionEvent!]! @derivedFrom(field: "auction")
}

type User @entity {
	"id will be user address"
	id: ID!
	muted: Boolean!
	alias: String!
	interactedAuctions: [Auction!]!
	totalBidsCount: BigInt!
	totalAuctionsParticipated: Int!
	totalAuctionsWon: BigInt!
}

type Stats @entity {
	id: ID!
	totalBidsCount: BigInt!
	totalRuneSwitches: BigInt!
	totalMessagesSent: BigInt!
}
